#! /bin/bash

function parse_git_dirty {
	git diff --no-ext-diff --quiet --exit-code &> /dev/null || echo "*"
}

function parse_git_branch {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/(\1$(parse_git_dirty))/"
}

#http://stackoverflow.com/questions/228544/how-to-tell-if-a-string-is-not-defined-in-a-bash-shell-script

function isVarDefined {
	local result=0
	if [ -z "${1+xxx}" ]; then
		result=1
	fi
	return $result
}

function isVarEmpty {
	local result=0
	if [ -z "${1-}" ] && [ "${1+xxx}" = "xxx" ]; then
		result=1
	fi
	return $result
}

export -f isVarDefined
export -f isVarEmpty
export -f parse_git_dirty
export -f parse_git_branch

export PS1="\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;36m\]\w\[\033[00m\]\$(parse_git_branch)\$ "
export CLICOLOR=1

alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

#Make prebuilt tools executable
chmod -R 0700 $HOME/dotfiles/.tools/

export MATPLOTLIBRC="$HOME""/.config/matplotlib"

isVarDefined "$MY_BIN_DIR"
if [ $? -eq 0 ]; then
	export MY_BIN_DIR="$HOME/bin";
fi

isVarDefined "$MY_DEV_DIR"
if [ $? -eq 0 ]; then
	export MY_DEV_DIR="$HOME/dev";
fi

isVarDefined "$MY_GIT_REPO_DIR"
if [ $? -eq 0 ]; then
        export MY_GIT_REPO_DIR="$HOME/GitRepos";
fi

chmod a+x "$MY_BIN_DIR/det_conf_linux_dist"
source "$MY_BIN_DIR/det_conf_linux_dist"

#If cygwin
isVarDefined "$DISTRO_ID"
if [ $? -eq 0 ]  && [ "$DISTRO_ID" == "cygwin" ] || [ -f $HOME/cygwin-trigger ] ; then 
    # Start ssh-agent
    # Source: http://unix.stackexchange.com/questions/90853/how-can-i-run-ssh-add-automatically-without-password-prompt
    if [ ! -S ~/.ssh/ssh_auth_sock ]; then
        eval `ssh-agent`
        ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
    fi

    export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
    ssh-add -l | grep "The agent has no identities" && ssh-add

    #eval "$(ssh-agent -s)"
    #ssh-add $HOME/.ssh/gHub_rsa

    alias qhome='/cygdrive/c/Users/Quantza'
    alias bhome='/cygdrive/c/Users/TheBoss'
    alias apt-cyg-main='apt-cyg -m http://mirrors.kernel.org/sourceware/cygwin'
    alias apt-cyg-port='apt-cyg -m ftp://ftp.cygwinports.org/pub/cygwinports'

    export PKG_INSTALL_PREFIX="apt-cyg install"
    export DISTRO_ID="cygwin"
    export EDITOR='emacs -nw'

#Actual Linux distro
else
    export WINEARCH=win32
    #export WINEARCH=win64
    export WINEPREFIX=$HOME/.wine
    export JAVAHOME=/opt/jdk/bin
    export JAVA_HOME=/opt/jdk/bin
    export SMARTGITHG_JAVA_HOME=/opt/jdk/bin
    export TEXMFHOME=$HOME/texmf
    export EDITOR="$HOME""/bin/edit"
    export TERM=xterm-256color
    
    export CUDA_ROOT=/usr/local/cuda
    PATH_ADDITION=$HOME/bin:"$CUDA_ROOT"/bin
    export PATH=$PATH_ADDITION:$PATH
    
    export LD_LIBRARY_PATH=$CUDA_ROOT/lib64:$LD_LIBRARY_PATH

    ## Devkit vars
    DEVKITPRO=/home/quantza-lab/devkitPro
    DEVKITARM=${DEVKITPRO}/devkitARM
	
    #Start 'conky' if startup script exists.
    if [ -f $HOME/.conky/conky-startup.sh ]; then
        chmod +x $HOME/.conky/conky-startup.sh
        $HOME/.conky/conky-startup.sh
    fi

	#http://virtualenvwrapper.readthedocs.org/en/latest/install.html#lazy-loading
    export WORKON_HOME=$HOME/.virtualenvs
    export PROJECT_HOME=$HOME/Projects

	if [ "$DISTRO_ID" == "ubuntu" ]; then
		VIRTUALENVWRAPPER_PREFIX="/usr/local/bin/virtualenvwrapper"
		
	elif [ "$DISTRO_ID" == "arch" ]; then
	    VIRTUALENVWRAPPER_PREFIX="/usr/bin/virtualenvwrapper"
        # Start ssh-agent
        # Source: http://unix.stackexchange.com/questions/90853/how-can-i-run-ssh-add-automatically-without-password-prompt
        if [ ! -S ~/.ssh/ssh_auth_sock ]; then
            eval `ssh-agent`
            ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
        fi

        export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
        ssh-add -l | grep "The agent has no identities" && ssh-add
    fi
	isVarDefined "$VIRTUALENVWRAPPER_PREFIX"
	if [ $? -eq 0 ]; then
		if [ -f "$VIRTUALENVWRAPPER_PREFIX"_lazy.sh  ]; then
			export VIRTUALENVWRAPPER_SCRIPT="$VIRTUALENVWRAPPER_PREFIX""_lazy.sh"
			source "$VIRTUALENVWRAPPER_SCRIPT"
		elif [ -f "$VIRTUALENVWRAPPER_PREFIX".sh ]; then
			export VIRTUALENVWRAPPER_SCRIPT="$VIRTUALENVWRAPPER_PREFIX"".sh"
			source "$VIRTUALENVWRAPPER_SCRIPT"
		fi
	fi		

    if [ -f $HOME/.gvm/scripts/gvm ]; then
        source $HOME/.gvm/scripts/gvm
    fi
fi

